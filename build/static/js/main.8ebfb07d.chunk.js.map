{"version":3,"sources":["components/SelectLocation/SingleAutocom/SingleAutocom.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Charts/Chart.jsx","components/SelectLocation/SingleAutocom/SingleAutocom.jsx","api/index.js","components/SelectLocation/SelectLocation.jsx","App.js","index.js","components/Charts/Chart.module.css","components/SelectLocation/SelectLocation.module.css","App.module.css"],"names":["module","exports","Cards","totalNumbers","cases","recovered","critical","deaths","tests","updated","active","formatNumber","num","isNaN","toString","replace","updatedDate","Date","toLocaleString","className","styles","container","Grid","spacing","justify","alignItems","item","component","Card","xs","md","cx","card","CardContent","Typography","variant","Chart","historicalData","labels","map","date","casesForDay","day","i","arr","lineChart","data","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointHoverBorderColor","fill","options","responsive","tooltips","mode","callbacks","tooltipItem","value","index","split","join","scales","yAxes","ticks","beginAtZero","userCallback","values","xAxes","barChart","Paper","paper","SingleAutocom","handleChange","Autocomplete","autoCompleat","onChange","e","val","renderInput","params","TextField","countriesURL","countries","a","axios","get","newData","country","console","error","statesURL","states","state","countiesURL","toLowerCase","lastDays","counties","listOfCounties","county","capitalize","historicalURL","totals","fullURL","log","undefined","statesTotals","stateData","find","st","historical","timeline","Object","keys","historicalState","dateList","forEach","totoalCasesForOneDay","reduce","acc","curr","totoalDeathsForOneDay","push","countyTotals","countyToFetch","singleCounty","province","stats","confirmed","updatedAt","countyHistorical","countyObj","SelectLocation","location","useState","hvaeStates","setHaveStates","haveCounty","setHaveCounty","countriesList","setCountriesList","statesList","setStatesList","countiesList","setCountiesList","useEffect","fetchCountries","fetchStates","fetchCounties","selectCountry","selectState","loc","selectCounty","App","props","fetchCountryData","countryData","setState","fetchStateData","fetchCountyData","countyData","singleCountyData","countyHistoricalData","handleListChange","bind","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ebfb07d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"autoCompleat\":\"SingleAutocom_autoCompleat__w2eTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"cases\":\"Cards_cases__3woMG\",\"tests\":\"Cards_tests__tk79f\",\"recovered\":\"Cards_recovered__1aizD\",\"critical\":\"Cards_critical__3C3AE\",\"deaths\":\"Cards_deaths__Qdjzq\",\"active\":\"Cards_active__1mwzX\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\n//import { spacing, flexbox, typography } from \"@material-ui/system\";\nimport styles from \"./Cards.module.css\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n\ttotalNumbers: { cases, recovered, critical, deaths, tests, updated, active },\n}) => {\n\tconst formatNumber = (num) => {\n\t\tif (isNaN(num)) return \"--\";\n\t\treturn num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\t};\n\tconst updatedDate = new Date(updated).toLocaleString();\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={0} justify=\"space-around\" alignItems=\"center\">\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.cases)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Cases</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(!cases ? \"Loading...\" : cases)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.critical)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Critical</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(critical)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.tests)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Tests</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(tests)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.recovered)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Recovered</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(recovered)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.deaths)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Deaths</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(deaths)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.active)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Active</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(active)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t<Typography variant=\"body2\">{`Last update: ${updatedDate}`}</Typography>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Cards;\n","import React from \"react\";\nimport styles from \"./Chart.module.css\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = ({ historicalData }) => {\n\tif (!historicalData[0]) return <h2>Loading......</h2>;\n\tconst labels = historicalData.map(({ date }) => date);\n\tconst cases = historicalData.map(({ cases }) => cases);\n\tconst recovered = historicalData.map(({ recovered }) => recovered);\n\tconst deaths = historicalData.map(({ deaths }) => deaths);\n\tconst active = historicalData.map(({ active }) => active);\n\tconst casesDayBefore = historicalData.map((day, i, arr) =>\n\t\ti === 0 ? day.cases - day.cases : arr[i - 1].cases\n\t);\n\tconst casesForDay = historicalData.map(({ cases }, i, arr) =>\n\t\ti === 0 ? 0 : cases - arr[i - 1].cases\n\t);\n\tconst lineChart = historicalData[0] ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels,\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\t//Cases\n\t\t\t\t\t\tdata: cases,\n\t\t\t\t\t\tlabel: \"Cases\",\n\t\t\t\t\t\tborderColor: \"rgba(255, 0, 29, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 29, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(255, 0, 29, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t//Recovered\n\t\t\t\t\t\tdata: recovered,\n\t\t\t\t\t\tlabel: \"Recovered\",\n\t\t\t\t\t\tborderColor: \"rgba(0, 244, 85, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(0, 244, 85, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(0, 244, 85, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t//Deaths\n\t\t\t\t\t\tdata: deaths,\n\t\t\t\t\t\tlabel: \"Deaths\",\n\t\t\t\t\t\tborderColor: \"rgba(137, 0, 16, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(137, 0, 16, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(137, 0, 16, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t//Active\n\t\t\t\t\t\tdata: active,\n\t\t\t\t\t\tlabel: \"Active\",\n\t\t\t\t\t\tborderColor: \"rgba(222, 220, 57, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(222, 220, 57, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(222, 220, 57, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tresponsive: true,\n\t\t\t\ttooltips: {\n\t\t\t\t\tmode: \"label\",\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tlabel: function (tooltipItem, data) {\n\t\t\t\t\t\t\tvar value = data.datasets[0].data[tooltipItem.index];\n\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tuserCallback: function (value, index, values) {\n\t\t\t\t\t\t\t\t\t// Convert the number to a string and splite the string every 3 charaters from the end\n\t\t\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\txAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconst barChart = (\n\t\t<Bar\n\t\t\tdata={{\n\t\t\t\tlabels,\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\t//New cases\n\t\t\t\t\t\tdata: casesForDay,\n\t\t\t\t\t\tlabel: \"New cases\",\n\t\t\t\t\t\tborderColor: \"rgba(255, 0, 29)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 29, 0.8)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(255, 0, 29)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tresponsive: true,\n\t\t\t\ttooltips: {\n\t\t\t\t\tmode: \"label\",\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tlabel: function (tooltipItem, data) {\n\t\t\t\t\t\t\tvar value = data.datasets[0].data[tooltipItem.index];\n\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tuserCallback: function (value, index, values) {\n\t\t\t\t\t\t\t\t\t// Convert the number to a string and splite the string every 3 charaters from the end\n\t\t\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\txAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t);\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={0}\n\t\t\t\tjustify=\"space-around\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName={styles.container}\n\t\t\t>\n\t\t\t\t<Grid component={Paper} className={styles.paper} item xs={12} md={5}>\n\t\t\t\t\t{<h4>Totals</h4>}\n\t\t\t\t\t{lineChart}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid component={Paper} className={styles.paper} item xs={12} md={5}>\n\t\t\t\t\t{<h4>Daily cases</h4>}\n\t\t\t\t\t{barChart}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport styles from \"./SingleAutocom.module.css\";\n//import cx from \"classnames\";\n\nconst SingleAutocom = ({ options, handleChange, value, label }) => {\n\treturn (\n\t\t<Autocomplete\n\t\t\tclassName={styles.autoCompleat}\n\t\t\tonChange={(e, val) => handleChange(e, val)}\n\t\t\toptions={options}\n\t\t\tvalue={value}\n\t\t\trenderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n\t\t/>\n\t);\n};\n\nexport default SingleAutocom;\n","import axios from \"axios\";\nimport { capitalize } from \"@material-ui/core\";\n\n//Countries\nconst countriesURL = \"https://corona.lmao.ninja/v2/countries\";\n\nexport const countries = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(countriesURL);\n\t\tlet newData = data.map((country) => country.country);\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\n//States\nconst statesURL = \"https://corona.lmao.ninja/v2/states\";\n\nexport const states = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(statesURL);\n\t\tconst newData = data.map((state) => state.state);\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\n//Counties\nconst countyURL = \"https://corona.lmao.ninja/v2/historical/usacounties\";\nconst countiesURL = (state) => `${countyURL}/${state.toLowerCase()}${lastDays}`;\n\nconst captialize = (words) =>\n\twords\n\t\t.split(\" \")\n\t\t.map((w) => w.substring(0, 1).toUpperCase() + w.substring(1))\n\t\t.join(\" \");\n\nexport const counties = async (state) => {\n\ttry {\n\t\tconst { data } = await axios.get(countiesURL(state));\n\t\tconst listOfCounties = data.map((county) => capitalize(county.county));\n\t\treturn listOfCounties;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nconst totalsURL = \"https://corona.lmao.ninja/v2/all\";\nconst historicalURL = \"https://corona.lmao.ninja/v2/historical\";\nconst usStatesURL = `${historicalURL}/usacounties`;\nconst lastDays = \"?lastdays=30\";\n\nexport const totals = async (country) => {\n\tlet fullURL = totalsURL;\n\tconsole.log(country);\n\tif (country !== undefined) {\n\t\tfullURL = `${countriesURL}/${country}`;\n\t}\n\ttry {\n\t\tconst { data } = await axios.get(fullURL);\n\n\t\tconst newData = {\n\t\t\tcases: data.cases,\n\t\t\trecovered: data.recovered,\n\t\t\tcritical: data.critical,\n\t\t\tdeaths: data.deaths,\n\t\t\ttests: data.tests,\n\t\t\tupdated: data.updated,\n\t\t\tactive: data.cases - data.deaths - data.recovered,\n\t\t};\n\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const statesTotals = async (state) => {\n\ttry {\n\t\tconst { data } = await axios.get(statesURL);\n\t\tconst stateData = data.find((st) => st.state === state);\n\t\tconst newData = {\n\t\t\tcases: stateData.cases,\n\t\t\tdeaths: stateData.deaths,\n\t\t\tactive: stateData.active,\n\t\t\ttests: stateData.tests,\n\t\t\trecovered: \"--\",\n\t\t\tupdated: stateData.updated,\n\t\t\tcritical: \"--\",\n\t\t\tstate: state,\n\t\t};\n\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const historical = async (country) => {\n\tlet fullURL = `${historicalURL}/all${lastDays}`;\n\tif (country) {\n\t\tfullURL = `${historicalURL}/${country}${lastDays}`;\n\t}\n\ttry {\n\t\tlet { data } = await axios.get(fullURL);\n\t\tif (data.timeline) {\n\t\t\tdata = data.timeline;\n\t\t}\n\t\tconst date = Object.keys(data.cases);\n\t\tconst newData = date.map((day) => ({\n\t\t\tdate: day,\n\t\t\tcases: data.cases[day],\n\t\t\trecovered: data.recovered[day],\n\t\t\tdeaths: data.deaths[day],\n\t\t\tactive: data.cases[day] - data.deaths[day] - data.recovered[day],\n\t\t}));\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const historicalState = async (state) => {\n\tconst { data } = await axios.get(countiesURL(state));\n\tconst dateList = Object.keys(data[0].timeline.cases);\n\tlet newData = [];\n\t//Edit\n\tdateList.forEach((date) => {\n\t\tconst totoalCasesForOneDay = data.reduce((acc, curr) => {\n\t\t\treturn curr.timeline.cases[date] + acc;\n\t\t}, 0);\n\t\tconst totoalDeathsForOneDay = data.reduce((acc, curr) => {\n\t\t\treturn curr.timeline.deaths[date] + acc;\n\t\t}, 0);\n\t\tnewData.push({ date: date, cases: totoalCasesForOneDay, deaths: totoalDeathsForOneDay });\n\t});\n\treturn newData;\n};\n\nexport const countyTotals = async (state, county) => {\n\ttry {\n\t\tconst allCounties = \"https://corona.lmao.ninja/v2/jhucsse/counties\";\n\t\tconst { data } = await axios.get(allCounties);\n\t\tconsole.log(\"data couty totals\");\n\t\tconsole.log(data);\n\t\tconst countyToFetch = data.find(\n\t\t\t(singleCounty) => singleCounty.province == state && singleCounty.county == county\n\t\t);\n\t\tconsole.log(\"countyToFetch\");\n\t\tconsole.log(countyToFetch);\n\t\tconst newData = {\n\t\t\tcases: countyToFetch.stats.confirmed,\n\t\t\trecovered: \"--\",\n\t\t\tcritical: \"--\",\n\t\t\tdeaths: countyToFetch.stats.deaths,\n\t\t\ttests: \"--\",\n\t\t\tupdated: countyToFetch.updatedAt,\n\t\t\tactive: \"--\",\n\t\t};\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const countyHistorical = async (state, county) => {\n\ttry {\n\t\tconst { data } = await axios.get(countiesURL(state));\n\t\tconsole.log(\"data\");\n\t\tconsole.log(data);\n\t\tconst countyObj = data.find((singleCounty) => singleCounty.county === county.toLowerCase());\n\t\tconsole.log(\"countyObj\");\n\t\tconsole.log(countyObj);\n\t\tconst date = Object.keys(countyObj.timeline.cases);\n\t\tconsole.log(\"date\");\n\t\tconsole.log(date);\n\t\tconst newData = date.map((day) => ({\n\t\t\tdate: day,\n\t\t\tcases: countyObj.timeline.cases[day],\n\t\t\trecovered: \"--\",\n\t\t\tdeaths: countyObj.timeline.deaths[day],\n\t\t\tactive: \"--\",\n\t\t}));\n\t\tconsole.log(newData);\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n","import React, { useState, useEffect, forwardRef } from \"react\";\nimport SingleAutocom from \"./SingleAutocom/SingleAutocom\";\nimport { countries, states, counties } from \"../../api\";\nimport styles from \"./SelectLocation.module.css\";\nimport { capitalize } from \"@material-ui/core\";\n//import cx from \"classnames\";\n\nconst SelectLocation = ({ location, handleChange }) => {\n\tconst [hvaeStates, setHaveStates] = useState(false); //Will Change when country is USA\n\tconst [haveCounty, setHaveCounty] = useState(false); //Will Change when state name is not state\n\tconst [countriesList, setCountriesList] = useState([]);\n\tconst [statesList, setStatesList] = useState([]);\n\tconst [countiesList, setCountiesList] = useState([]);\n\n\t//Get all countries\n\tuseEffect(() => {\n\t\tconst fetchCountries = async () => {\n\t\t\tsetCountriesList(await countries());\n\t\t};\n\t\tfetchCountries();\n\t}, []);\n\n\t//Get states when current country is usa\n\tuseEffect(() => {\n\t\t{\n\t\t\tconst fetchStates = async () => {\n\t\t\t\tsetStatesList(await states());\n\t\t\t};\n\t\t\tfetchStates();\n\t\t}\n\t\treturn () => {\n\t\t\tsetStatesList([]);\n\t\t};\n\t}, [hvaeStates]);\n\n\t//Get counties when current country is usa\n\tuseEffect(() => {\n\t\t{\n\t\t\tif (location.state !== null) {\n\t\t\t\tconst fetchCounties = async () => {\n\t\t\t\t\tsetCountiesList(await counties(location.state));\n\t\t\t\t};\n\t\t\t\tfetchCounties();\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\tsetCountiesList([]);\n\t\t};\n\t}, [haveCounty]);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"statesList\");\n\t\tconsole.log(statesList);\n\t}, [location.country]);\n\n\t//handle select country\n\tconst selectCountry = async (e, value) => {\n\t\tif (value === \"USA\") {\n\t\t\tsetHaveStates(true);\n\t\t} else if (value === null || value !== \"USA\") {\n\t\t\tsetHaveStates(false);\n\t\t\tsetHaveCounty(false);\n\t\t\tsetStatesList([]);\n\t\t}\n\t\tconst loc = { country: value, state: null, county: null };\n\t\thandleChange(e, loc);\n\t};\n\n\t//handle state select\n\tconst selectState = async (e, value) => {\n\t\tif (value !== null) {\n\t\t\tconst fetchCounties = async () => {\n\t\t\t\tsetCountiesList(await counties(value));\n\t\t\t};\n\t\t\tfetchCounties();\n\t\t\tsetHaveCounty(true);\n\t\t} else {\n\t\t\tsetHaveCounty(false);\n\t\t}\n\t\tconst loc = { country: location.country, state: value, county: null };\n\t\thandleChange(e, loc);\n\t};\n\n\tconst selectCounty = async (e, value) => {\n\t\tsetHaveCounty(true);\n\t\tconst loc = { country: location.country, state: location.state, county: value };\n\t\thandleChange(e, loc);\n\t};\n\n\tconst country = (\n\t\t<SingleAutocom\n\t\t\toptions={countriesList}\n\t\t\tvalue={location.country}\n\t\t\thandleChange={selectCountry}\n\t\t\tlabel={\"Country\"}\n\t\t/>\n\t);\n\tconst state = <SingleAutocom label={\"State\"} handleChange={selectState} options={statesList} />;\n\n\tconst county = (\n\t\t<SingleAutocom label={\"County\"} handleChange={selectCounty} options={countiesList} />\n\t);\n\n\tif (!hvaeStates && !haveCounty) {\n\t\treturn <div className={styles.container}>{country}</div>;\n\t} else if (hvaeStates && !haveCounty) {\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t{country}\n\t\t\t\t{state}\n\t\t\t</div>\n\t\t);\n\t} else if (hvaeStates && haveCounty) {\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t{country}\n\t\t\t\t{state}\n\t\t\t\t{county}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default SelectLocation;\n","import React from \"react\";\nimport styles from \"./App.module.css\";\n\nimport { Cards, Chart, SelectLocation } from \"./components\";\nimport {\n\ttotals,\n\thistorical,\n\tstatesTotals,\n\thistoricalState,\n\tcountyTotals,\n\tcountyHistorical,\n} from \"./api\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlocation: {\n\t\t\t\tcountry: null,\n\t\t\t\tstate: null,\n\t\t\t\tcounty: null,\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\ttotalNumbers: {},\n\t\t\t\thistoricalData: {},\n\t\t\t},\n\t\t};\n\t\tthis.handleListChange = this.handleListChange.bind(this);\n\t}\n\n\tfetchCountryData = async (countryData) => {\n\t\tconst totalNumbers = await totals(countryData);\n\t\tconst historicalData = await historical(countryData);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdata: {\n\t\t\t\t\ttotalNumbers,\n\t\t\t\t\thistoricalData,\n\t\t\t\t},\n\t\t\t},\n\t\t\t() => console.log(this.state)\n\t\t);\n\t};\n\n\tfetchStateData = async (stateData) => {\n\t\tconst totalNumbers = await statesTotals(stateData);\n\t\tconst historicalData = await historicalState(stateData);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdata: {\n\t\t\t\t\ttotalNumbers,\n\t\t\t\t\thistoricalData,\n\t\t\t\t},\n\t\t\t},\n\t\t\t() => console.log(this.state)\n\t\t);\n\t};\n\n\tfetchCountyData = async (stateData, countyData) => {\n\t\tconst singleCountyData = await countyTotals(stateData, countyData);\n\t\tconst countyHistoricalData = await countyHistorical(stateData, countyData);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdata: {\n\t\t\t\t\ttotalNumbers: singleCountyData,\n\t\t\t\t\thistoricalData: countyHistoricalData,\n\t\t\t\t},\n\t\t\t},\n\t\t\t() => console.log(this.state)\n\t\t);\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.fetchCountryData();\n\t}\n\n\thandleListChange = async (e, value) => {\n\t\tif (value === null) {\n\t\t\tthis.setState({\n\t\t\t\tlocation: {\n\t\t\t\t\tcountry: null,\n\t\t\t\t\tstate: null,\n\t\t\t\t\tcounty: null,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\t//Set state when country is empty and get global data\n\t\telse if (value.country === null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.country = null;\n\t\t\t\t\tstate.location.state = null;\n\t\t\t\t\tstate.location.county = null;\n\t\t\t\t\tthis.fetchCountryData();\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t\t//set state when country is set and get data\n\t\telse if (value.country !== null && value.state === null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.country = value.country;\n\t\t\t\t\tstate.location.state = value.state;\n\t\t\t\t\tstate.location.county = null;\n\t\t\t\t\tthis.fetchCountryData(value.country);\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t\t//country and state are set but not county\n\t\telse if (value.country !== null && value.state !== null && value.county === null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.state = value.state;\n\t\t\t\t\tstate.location.county = null;\n\t\t\t\t\tthis.fetchStateData(value.state);\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t\t//country, state and couty are set\n\t\telse if (value.country !== null && value.state !== null && value.county !== null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.county = value.county;\n\t\t\t\t\tthis.fetchCountyData(value.state, value.county);\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<SelectLocation location={this.state.location} handleChange={this.handleListChange} />\n\t\t\t\t<Cards totalNumbers={this.state.data.totalNumbers} />\n\t\t\t\t<Chart historicalData={this.state.data.historicalData} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\",\"charItem\":\"Chart_charItem__3Nrzy\",\"paper\":\"Chart_paper__9qJmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectLocation_container__3veZ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"statesHiden\":\"App_statesHiden__17Ip_\",\"statesShow\":\"App_statesShow__3BFPu\",\"selectHiden\":\"App_selectHiden__1dvOV\",\"selectShow\":\"App_selectShow__tjjAW\"};"],"sourceRoot":""}