{"version":3,"sources":["App.module.css","components/SelectLocation/SingleAutocom/SingleAutocom.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Charts/Chart.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/SelectLocation/SingleAutocom/SingleAutocom.jsx","components/SelectLocation/SelectLocation.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","components/Charts/Chart.module.css","components/SelectLocation/SelectLocation.module.css"],"names":["module","exports","Cards","totalNumbers","cases","recovered","critical","deaths","tests","updated","active","formatNumber","num","isNaN","toString","replace","updatedDate","Date","toLocaleString","className","styles","container","Grid","spacing","justify","alignItems","item","component","Card","xs","md","cx","card","CardContent","Typography","variant","Chart","historicalData","labels","map","date","casesForDay","day","i","arr","lineChart","data","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointHoverBorderColor","fill","options","responsive","tooltips","mode","callbacks","tooltipItem","value","index","split","join","scales","yAxes","ticks","beginAtZero","userCallback","values","xAxes","barChart","Paper","paper","countriesURL","countries","a","axios","get","newData","country","console","error","statesURL","states","state","countiesURL","toLowerCase","lastDays","counties","listOfCounties","county","capitalize","historicalURL","totals","fullURL","log","undefined","statesTotals","stateData","find","st","historical","timeline","Object","keys","historicalState","dateList","forEach","totoalCasesForOneDay","reduce","acc","curr","totoalDeathsForOneDay","push","countyTotals","countyToFetch","singleCounty","province","stats","confirmed","updatedAt","countyHistorical","countyObj","React","Component","SingleAutocom","handleChange","Autocomplete","autoCompleat","onChange","e","val","renderInput","params","TextField","SelectLocation","location","useState","hvaeStates","setHaveStates","haveCounty","setHaveCounty","countriesList","setCountriesList","statesList","setStatesList","countiesList","setCountiesList","useEffect","fetchCountries","fetchStates","fetchCounties","selectCountry","selectState","loc","selectCounty","App","props","fetchCountryData","countryData","setState","fetchStateData","fetchCountyData","countyData","singleCountyData","countyHistoricalData","handleListChange","bind","this","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7ddba48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"statesHiden\":\"App_statesHiden__17Ip_\",\"statesShow\":\"App_statesShow__3BFPu\",\"selectHiden\":\"App_selectHiden__1dvOV\",\"selectShow\":\"App_selectShow__tjjAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autoCompleat\":\"SingleAutocom_autoCompleat__w2eTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"cases\":\"Cards_cases__3woMG\",\"tests\":\"Cards_tests__tk79f\",\"recovered\":\"Cards_recovered__1aizD\",\"critical\":\"Cards_critical__3C3AE\",\"deaths\":\"Cards_deaths__Qdjzq\",\"active\":\"Cards_active__1mwzX\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\n//import { spacing, flexbox, typography } from \"@material-ui/system\";\nimport styles from \"./Cards.module.css\";\nimport cx from \"classnames\";\n\nconst Cards = ({\n\ttotalNumbers: { cases, recovered, critical, deaths, tests, updated, active },\n}) => {\n\t//if (!cases) {\n\t//\treturn \"Loading...\";\n\t//}\n\tconst formatNumber = (num) => {\n\t\tif (isNaN(num)) return \"--\";\n\t\treturn num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n\t};\n\tconst updatedDate = new Date(updated).toLocaleString();\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={0} justify=\"space-around\" alignItems=\"center\">\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.cases)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Cases</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(!cases ? \"Loading...\" : cases)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.critical)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Critical</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(critical)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.tests)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Tests</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(tests)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.recovered)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Recovered</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(recovered)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.deaths)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Deaths</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(deaths)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={4} md={3} className={cx(styles.card, styles.active)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography variant=\"h5\">Active</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">{formatNumber(active)}</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t<Typography variant=\"body2\">{`Last update: ${updatedDate}`}</Typography>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Cards;\n","import React from \"react\";\nimport styles from \"./Chart.module.css\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = ({ historicalData }) => {\n\tif (!historicalData[0]) return <h2>Loading......</h2>;\n\tconst labels = historicalData.map(({ date }) => date);\n\tconst cases = historicalData.map(({ cases }) => cases);\n\tconst recovered = historicalData.map(({ recovered }) => recovered);\n\tconst deaths = historicalData.map(({ deaths }) => deaths);\n\tconst active = historicalData.map(({ active }) => active);\n\tconst casesDayBefore = historicalData.map((day, i, arr) =>\n\t\ti === 0 ? day.cases - day.cases : arr[i - 1].cases\n\t);\n\tconst casesForDay = historicalData.map(({ cases }, i, arr) =>\n\t\ti === 0 ? 0 : cases - arr[i - 1].cases\n\t);\n\tconst lineChart = historicalData[0] ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels,\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\t//Cases\n\t\t\t\t\t\tdata: cases,\n\t\t\t\t\t\tlabel: \"Cases\",\n\t\t\t\t\t\tborderColor: \"rgba(255, 0, 29, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 29, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(255, 0, 29, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t//Recovered\n\t\t\t\t\t\tdata: recovered,\n\t\t\t\t\t\tlabel: \"Recovered\",\n\t\t\t\t\t\tborderColor: \"rgba(0, 244, 85, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(0, 244, 85, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(0, 244, 85, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t//Deaths\n\t\t\t\t\t\tdata: deaths,\n\t\t\t\t\t\tlabel: \"Deaths\",\n\t\t\t\t\t\tborderColor: \"rgba(137, 0, 16, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(137, 0, 16, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(137, 0, 16, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t//Active\n\t\t\t\t\t\tdata: active,\n\t\t\t\t\t\tlabel: \"Active\",\n\t\t\t\t\t\tborderColor: \"rgba(222, 220, 57, 0.8)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(222, 220, 57, 0.2)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(222, 220, 57, 1)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tresponsive: true,\n\t\t\t\ttooltips: {\n\t\t\t\t\tmode: \"label\",\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tlabel: function (tooltipItem, data) {\n\t\t\t\t\t\t\tvar value = data.datasets[0].data[tooltipItem.index];\n\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tuserCallback: function (value, index, values) {\n\t\t\t\t\t\t\t\t\t// Convert the number to a string and splite the string every 3 charaters from the end\n\t\t\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\txAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconst barChart = (\n\t\t<Bar\n\t\t\tdata={{\n\t\t\t\tlabels,\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\t//New cases\n\t\t\t\t\t\tdata: casesForDay,\n\t\t\t\t\t\tlabel: \"New cases\",\n\t\t\t\t\t\tborderColor: \"rgba(255, 0, 29)\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(255, 0, 29, 0.8)\",\n\t\t\t\t\t\tpointBackgroundColor: \"rgba(255, 0, 29)\",\n\t\t\t\t\t\tpointHoverBorderColor: \"black\",\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tresponsive: true,\n\t\t\t\ttooltips: {\n\t\t\t\t\tmode: \"label\",\n\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\tlabel: function (tooltipItem, data) {\n\t\t\t\t\t\t\tvar value = data.datasets[0].data[tooltipItem.index];\n\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tscales: {\n\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\t\tuserCallback: function (value, index, values) {\n\t\t\t\t\t\t\t\t\t// Convert the number to a string and splite the string every 3 charaters from the end\n\t\t\t\t\t\t\t\t\tvalue = value.toString();\n\t\t\t\t\t\t\t\t\tvalue = value.split(/(?=(?:...)*$)/);\n\t\t\t\t\t\t\t\t\tvalue = value.join(\",\");\n\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\txAxes: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tticks: {},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t);\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={0}\n\t\t\t\tjustify=\"space-around\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName={styles.container}\n\t\t\t>\n\t\t\t\t<Grid component={Paper} className={styles.paper} item xs={12} md={5}>\n\t\t\t\t\t{<h4>Totals</h4>}\n\t\t\t\t\t{lineChart}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid component={Paper} className={styles.paper} item xs={12} md={5}>\n\t\t\t\t\t{<h4>Daily cases</h4>}\n\t\t\t\t\t{barChart}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import axios from \"axios\";\nimport { capitalize } from \"@material-ui/core\";\n\n//Countries\n//const countriesURL = \"https://disease.sh/v2/countries\";\nconst countriesURL = \"https://corona.lmao.ninja/v2/countries\";\n\nexport const countries = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(countriesURL);\n\t\tlet newData = data.map((country) => country.country);\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\n//////////, {\n//\t\theaders: {\n//\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n//\t\t},\n//\t}\n\n//States\nconst statesURL = \"https://corona.lmao.ninja/v2/states\";\n\nexport const states = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(statesURL);\n\t\tconst newData = data.map((state) => state.state);\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\n//Counties\nconst countyURL = \"https://corona.lmao.ninja/v2/historical/usacounties\";\nconst countiesURL = (state) => `${countyURL}/${state.toLowerCase()}${lastDays}`;\n\nconst captialize = (words) =>\n\twords\n\t\t.split(\" \")\n\t\t.map((w) => w.substring(0, 1).toUpperCase() + w.substring(1))\n\t\t.join(\" \");\n\nexport const counties = async (state) => {\n\ttry {\n\t\tconst { data } = await axios.get(countiesURL(state));\n\t\tconst listOfCounties = data.map((county) => capitalize(county.county));\n\t\treturn listOfCounties;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nconst totalsURL = \"https://corona.lmao.ninja/v2/all\";\n//const countriesURL = \"https://corona.lmao.ninja/v2/countries\";\n//const statesURL = \"https://corona.lmao.ninja/v2/states\";\nconst historicalURL = \"https://corona.lmao.ninja/v2/historical\";\nconst usStatesURL = `${historicalURL}/usacounties`;\nconst lastDays = \"?lastdays=30\";\n//const stateCounties = (state) => `${usStatesURL}/${state.toLowerCase()}${lastDays}`;\n\nexport const totals = async (country) => {\n\tlet fullURL = totalsURL;\n\tconsole.log(country);\n\tif (country !== undefined) {\n\t\tfullURL = `${countriesURL}/${country}`;\n\t}\n\ttry {\n\t\tconst { data } = await axios.get(fullURL);\n\n\t\tconst newData = {\n\t\t\tcases: data.cases,\n\t\t\trecovered: data.recovered,\n\t\t\tcritical: data.critical,\n\t\t\tdeaths: data.deaths,\n\t\t\ttests: data.tests,\n\t\t\tupdated: data.updated,\n\t\t\tactive: data.cases - data.deaths - data.recovered,\n\t\t};\n\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const statesTotals = async (state) => {\n\ttry {\n\t\tconst { data } = await axios.get(statesURL);\n\t\tconst stateData = data.find((st) => st.state === state);\n\t\tconst newData = {\n\t\t\tcases: stateData.cases,\n\t\t\tdeaths: stateData.deaths,\n\t\t\tactive: stateData.active,\n\t\t\ttests: stateData.tests,\n\t\t\trecovered: \"--\",\n\t\t\tupdated: stateData.updated, //////////////////////\n\t\t\tcritical: \"--\",\n\t\t\tstate: state,\n\t\t};\n\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const historical = async (country) => {\n\tlet fullURL = `${historicalURL}/all${lastDays}`;\n\tif (country) {\n\t\tfullURL = `${historicalURL}/${country}${lastDays}`;\n\t}\n\ttry {\n\t\tlet { data } = await axios.get(fullURL);\n\t\tif (data.timeline) {\n\t\t\tdata = data.timeline;\n\t\t}\n\t\tconst date = Object.keys(data.cases); //Array of dates\n\t\tconst newData = date.map((day) => ({\n\t\t\tdate: day,\n\t\t\tcases: data.cases[day],\n\t\t\trecovered: data.recovered[day],\n\t\t\tdeaths: data.deaths[day],\n\t\t\tactive: data.cases[day] - data.deaths[day] - data.recovered[day],\n\t\t}));\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const historicalState = async (state) => {\n\tconst { data } = await axios.get(countiesURL(state));\n\tconst dateList = Object.keys(data[0].timeline.cases);\n\tlet newData = [];\n\t//change to function to elemenate repeating\n\tdateList.forEach((date) => {\n\t\tconst totoalCasesForOneDay = data.reduce((acc, curr) => {\n\t\t\treturn curr.timeline.cases[date] + acc;\n\t\t}, 0);\n\t\tconst totoalDeathsForOneDay = data.reduce((acc, curr) => {\n\t\t\treturn curr.timeline.deaths[date] + acc;\n\t\t}, 0);\n\t\tnewData.push({ date: date, cases: totoalCasesForOneDay, deaths: totoalDeathsForOneDay });\n\t});\n\treturn newData;\n};\n\n//export const counties = async (state) => {\n//\tconst { data } = await axios.get(stateCounties(state));\n//\tconst listOfCounties = data.map((county) => county.county);\n//\tconsole.log(\"listOfCounties\");\n//\tconsole.log(listOfCounties);\n//\treturn listOfCounties;\n//};\n\nexport const countyTotals = async (state, county) => {\n\ttry {\n\t\tconst allCounties = \"https://corona.lmao.ninja/v2/jhucsse/counties\";\n\t\tconst { data } = await axios.get(allCounties);\n\t\tconsole.log(\"data couty totals\");\n\t\tconsole.log(data);\n\t\tconst countyToFetch = data.find(\n\t\t\t(singleCounty) => singleCounty.province == state && singleCounty.county == county\n\t\t);\n\t\tconsole.log(\"countyToFetch\");\n\t\tconsole.log(countyToFetch);\n\t\tconst newData = {\n\t\t\tcases: countyToFetch.stats.confirmed,\n\t\t\trecovered: \"--\",\n\t\t\tcritical: \"--\",\n\t\t\tdeaths: countyToFetch.stats.deaths,\n\t\t\ttests: \"--\",\n\t\t\tupdated: countyToFetch.updatedAt,\n\t\t\tactive: \"--\",\n\t\t};\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\nexport const countyHistorical = async (state, county) => {\n\ttry {\n\t\tconst { data } = await axios.get(countiesURL(state));\n\t\tconsole.log(\"data\");\n\t\tconsole.log(data);\n\t\tconst countyObj = data.find((singleCounty) => singleCounty.county === county.toLowerCase());\n\t\tconsole.log(\"countyObj\");\n\t\tconsole.log(countyObj);\n\t\tconst date = Object.keys(countyObj.timeline.cases);\n\t\tconsole.log(\"date\");\n\t\tconsole.log(date);\n\t\tconst newData = date.map((day) => ({\n\t\t\tdate: day,\n\t\t\tcases: countyObj.timeline.cases[day],\n\t\t\trecovered: \"--\",\n\t\t\tdeaths: countyObj.timeline.deaths[day],\n\t\t\tactive: \"--\",\n\t\t}));\n\t\tconsole.log(newData);\n\t\treturn newData;\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\n\n//export const countries = async () => {\n//\ttry {\n//\t\tconst { data } = await axios.get(countriesURL);\n//\t\tlet newData = data.map((country) => country.country);\n//\t\tnewData.unshift(\"Global\");\n//\t\treturn newData;\n//\t} catch (err) {\n//\t\tconsole.error(err);\n//\t}\n//};\n\n//export const states = async () => {\n//\ttry {\n//\t\tconst { data } = await axios.get(statesURL, {\n//\t\t\theaders: { \"Access-Control-Allow-Origin\": \"*\" },\n//\t\t});\n//\t\tconst newData = data.map((state) => state.state);\n//\t\treturn newData;\n//\t} catch (err) {\n//\t\tconsole.error(err);\n//\t}\n//};\n","import React, { useState } from \"react\";\nimport { NativeSelect, FormControl, TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport styles from \"./CountryPicker.module.css\";\nimport { countries } from \"../../api\";\nimport cx from \"classnames\";\n\n//const CountryPicker = () => {\n//\tconst [countryNames, setCountryNames] = useState();\n//\n//}\n\nclass CountryPicker extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcountryNames: [],\n\t\t};\n\t}\n\tasync componentDidMount() {\n\t\tconst countryNames = await countries();\n\t\tthis.setState({ countryNames: countryNames });\n\t\tconsole.log(countryNames);\n\t}\n\n\trender() {\n\t\tconst captialize = (words) =>\n\t\t\twords\n\t\t\t\t.split(\" \")\n\t\t\t\t.map((w) => w.substring(0, 1).toUpperCase() + w.substring(1))\n\t\t\t\t.join(\" \");\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<FormControl className={styles.selectBox}>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tclassName={styles.selectBox}\n\t\t\t\t\t\tvalue={this.state.countryNames}\n\t\t\t\t\t\tonChange={(e, newVal) => this.props.handleCountryChange(newVal)}\n\t\t\t\t\t\toptions={this.state.countryNames}\n\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Country\" variant=\"outlined\" />}\n\t\t\t\t\t>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Autocomplete>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tid={\"state\"}\n\t\t\t\t\t\tclassName={cx(this.props.statesClass, styles.selectBox)}\n\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\tonChange={(e) => this.props.handleStateChange(e.target.value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">States</option>\n\t\t\t\t\t\t{this.props.listOfStates.map((state, i) => (\n\t\t\t\t\t\t\t<option key={i} value={state}>\n\t\t\t\t\t\t\t\t{state}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t</FormControl>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<NativeSelect\n\t\t\t\t\t\tid={\"county\"}\n\t\t\t\t\t\tclassName={cx(this.props.countyClass, styles.selectBox)}\n\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\tonChange={(e) => this.props.handleCountyChange(this.props.currentState, e.target.value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">Counties</option>\n\t\t\t\t\t\t{this.props.listOfCounties.map((county, i) => (\n\t\t\t\t\t\t\t<option key={i} value={captialize(county)}>\n\t\t\t\t\t\t\t\t{captialize(county)}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</NativeSelect>\n\t\t\t\t</FormControl>\n\t\t\t</div>\n\t\t);\n\t}\n}\n//const CountryPicker = ({ handleCountryChange }) => {\n//const [countryNames, setCountryNames] = useState([]);\n//\n//useEffect(() => {\n//\tconst fetchCountries = async () => {\n//\t\tsetCountryNames(await countries());\n//\t};\n//\n//\tfetchCountries();\n//}, [setCountryNames]);\n\n//const getOptions = (optionsAPI) => {\n//\tconst [optionsName, setOptionName] = useState([]);\n//\n//\tuseEffect(() => {\n//\t\tconst fetchOptions = async () => {\n//\t\t\tsetOptionName(await optionsAPI());\n//\t\t};\n//\n//\t\tfetchOptions();\n//\t}, [setOptionName]);\n//\treturn optionsName;\n//};\n//\n//const countryNames = getOptions(countries);\n\n//return (\n//\t<div className={styles.container}>\n//\t\t<FormControl className={styles.formControl}>\n//\t\t\t<NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n//\t\t\t\t<option value=\"\">Global</option>\n//\t\t\t\t{countryNames.map((country, i) => (\n//\t\t\t\t\t<option key={i} value={country}>\n//\t\t\t\t\t\t{country}\n//\t\t\t\t\t</option>\n//\t\t\t\t))}\n//\t\t\t</NativeSelect>\n//\n//\t\t\t<NativeSelect className={styles.states} defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n//\t\t\t\t<option value=\"\">---</option>\n//\t\t\t\t{states.map((country, i) => (\n//\t\t\t\t\t<option key={i} value={country}>\n//\t\t\t\t\t\t{country}\n//\t\t\t\t\t</option>\n//\t\t\t\t))}\n//\t\t\t</NativeSelect>\n//\t\t</FormControl>\n//\t</div>\n//);\n//};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport styles from \"./SingleAutocom.module.css\";\n//import cx from \"classnames\";\n\nconst SingleAutocom = ({ options, handleChange, value, label }) => {\n\treturn (\n\t\t<Autocomplete\n\t\t\tclassName={styles.autoCompleat}\n\t\t\tonChange={(e, val) => handleChange(e, val)}\n\t\t\toptions={options}\n\t\t\tvalue={value}\n\t\t\trenderInput={(params) => <TextField {...params} label={label} variant=\"outlined\" />}\n\t\t/>\n\t);\n};\n\nexport default SingleAutocom;\n","import React, { useState, useEffect, forwardRef } from \"react\";\nimport SingleAutocom from \"./SingleAutocom/SingleAutocom\";\nimport { countries, states, counties } from \"../../api\";\nimport styles from \"./SelectLocation.module.css\";\nimport { capitalize } from \"@material-ui/core\";\n//import cx from \"classnames\";\n\nconst SelectLocation = ({ location, handleChange }) => {\n\tconst [hvaeStates, setHaveStates] = useState(false); //Will Change when country is USA\n\tconst [haveCounty, setHaveCounty] = useState(false); //Will Change when state name is not state\n\tconst [countriesList, setCountriesList] = useState([]);\n\tconst [statesList, setStatesList] = useState([]);\n\tconst [countiesList, setCountiesList] = useState([]);\n\n\t//Get all countries\n\tuseEffect(() => {\n\t\tconst fetchCountries = async () => {\n\t\t\tsetCountriesList(await countries());\n\t\t};\n\t\tfetchCountries();\n\t}, []);\n\n\t//Get states when current country is usa\n\tuseEffect(() => {\n\t\t{\n\t\t\tconst fetchStates = async () => {\n\t\t\t\tsetStatesList(await states());\n\t\t\t};\n\t\t\tfetchStates();\n\t\t}\n\t\treturn () => {\n\t\t\tsetStatesList([]);\n\t\t};\n\t}, [hvaeStates]);\n\n\t//Get counties when current country is usa\n\tuseEffect(() => {\n\t\t{\n\t\t\tif (location.state !== null) {\n\t\t\t\tconst fetchCounties = async () => {\n\t\t\t\t\tsetCountiesList(await counties(location.state));\n\t\t\t\t};\n\t\t\t\tfetchCounties();\n\t\t\t}\n\t\t}\n\t\treturn () => {\n\t\t\tsetCountiesList([]);\n\t\t};\n\t}, [haveCounty]);\n\n\tuseEffect(() => {\n\t\tconsole.log(\"statesList\");\n\t\tconsole.log(statesList);\n\t}, [location.country]);\n\n\t//handle select country\n\tconst selectCountry = async (e, value) => {\n\t\tif (value === \"USA\") {\n\t\t\tsetHaveStates(true);\n\t\t} else if (value === null || value !== \"USA\") {\n\t\t\tsetHaveStates(false);\n\t\t\tsetHaveCounty(false);\n\t\t\tsetStatesList([]);\n\t\t}\n\t\tconst loc = { country: value, state: null, county: null };\n\t\thandleChange(e, loc);\n\t};\n\n\t//handle state select\n\tconst selectState = async (e, value) => {\n\t\tif (value !== null) {\n\t\t\tconst fetchCounties = async () => {\n\t\t\t\tsetCountiesList(await counties(value));\n\t\t\t};\n\t\t\tfetchCounties();\n\t\t\tsetHaveCounty(true);\n\t\t} else {\n\t\t\tsetHaveCounty(false);\n\t\t}\n\t\tconst loc = { country: location.country, state: value, county: null };\n\t\thandleChange(e, loc);\n\t};\n\n\tconst selectCounty = async (e, value) => {\n\t\tsetHaveCounty(true);\n\t\tconst loc = { country: location.country, state: location.state, county: value };\n\t\thandleChange(e, loc);\n\t};\n\n\tconst country = (\n\t\t<SingleAutocom\n\t\t\toptions={countriesList}\n\t\t\tvalue={location.country}\n\t\t\thandleChange={selectCountry}\n\t\t\tlabel={\"Country\"}\n\t\t/>\n\t);\n\tconst state = <SingleAutocom label={\"State\"} handleChange={selectState} options={statesList} />;\n\n\tconst county = (\n\t\t<SingleAutocom label={\"County\"} handleChange={selectCounty} options={countiesList} />\n\t);\n\n\tif (!hvaeStates && !haveCounty) {\n\t\treturn <div className={styles.container}>{country}</div>;\n\t} else if (hvaeStates && !haveCounty) {\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t{country}\n\t\t\t\t{state}\n\t\t\t</div>\n\t\t);\n\t} else if (hvaeStates && haveCounty) {\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t{country}\n\t\t\t\t{state}\n\t\t\t\t{county}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default SelectLocation;\n","import React from \"react\";\nimport styles from \"./App.module.css\";\n\nimport { Cards, Chart, SelectLocation } from \"./components\";\nimport {\n\ttotals,\n\thistorical,\n\tstatesTotals,\n\thistoricalState,\n\tcountyTotals,\n\tcountyHistorical,\n} from \"./api\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlocation: {\n\t\t\t\tcountry: null,\n\t\t\t\tstate: null,\n\t\t\t\tcounty: null,\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\ttotalNumbers: {},\n\t\t\t\thistoricalData: {},\n\t\t\t},\n\t\t};\n\t\tthis.handleListChange = this.handleListChange.bind(this);\n\t}\n\n\tfetchCountryData = async (countryData) => {\n\t\tconst totalNumbers = await totals(countryData);\n\t\tconst historicalData = await historical(countryData);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdata: {\n\t\t\t\t\ttotalNumbers,\n\t\t\t\t\thistoricalData,\n\t\t\t\t},\n\t\t\t},\n\t\t\t() => console.log(this.state)\n\t\t);\n\t};\n\n\tfetchStateData = async (stateData) => {\n\t\tconst totalNumbers = await statesTotals(stateData);\n\t\tconst historicalData = await historicalState(stateData);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdata: {\n\t\t\t\t\ttotalNumbers,\n\t\t\t\t\thistoricalData,\n\t\t\t\t},\n\t\t\t},\n\t\t\t() => console.log(this.state)\n\t\t);\n\t};\n\n\tfetchCountyData = async (stateData, countyData) => {\n\t\tconst singleCountyData = await countyTotals(stateData, countyData);\n\t\tconst countyHistoricalData = await countyHistorical(stateData, countyData);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdata: {\n\t\t\t\t\ttotalNumbers: singleCountyData,\n\t\t\t\t\thistoricalData: countyHistoricalData,\n\t\t\t\t},\n\t\t\t},\n\t\t\t() => console.log(this.state)\n\t\t);\n\t};\n\n\tasync componentDidMount() {\n\t\tthis.fetchCountryData();\n\t}\n\n\thandleListChange = async (e, value) => {\n\t\tif (value === null) {\n\t\t\tthis.setState({\n\t\t\t\tlocation: {\n\t\t\t\t\tcountry: null,\n\t\t\t\t\tstate: null,\n\t\t\t\t\tcounty: null,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\t//Set state when country is empty and get global data\n\t\telse if (value.country === null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.country = null;\n\t\t\t\t\tstate.location.state = null;\n\t\t\t\t\tstate.location.county = null;\n\t\t\t\t\tthis.fetchCountryData();\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t\t//set state when country is set and get data\n\t\telse if (value.country !== null && value.state === null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.country = value.country;\n\t\t\t\t\tstate.location.state = value.state;\n\t\t\t\t\tstate.location.county = null;\n\t\t\t\t\tthis.fetchCountryData(value.country);\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t\t//country and state are set but not county\n\t\telse if (value.country !== null && value.state !== null && value.county === null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.state = value.state;\n\t\t\t\t\tstate.location.county = null;\n\t\t\t\t\tthis.fetchStateData(value.state);\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t\t//country, state and couty are set\n\t\telse if (value.country !== null && value.state !== null && value.county !== null) {\n\t\t\tthis.setState(\n\t\t\t\t(state) => {\n\t\t\t\t\tstate.location.county = value.county;\n\t\t\t\t\tthis.fetchCountyData(value.state, value.county);\n\t\t\t\t},\n\t\t\t\t() => console.log(this.state)\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<SelectLocation location={this.state.location} handleChange={this.handleListChange} />\n\t\t\t\t<Cards totalNumbers={this.state.data.totalNumbers} />\n\t\t\t\t<Chart historicalData={this.state.data.historicalData} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n/*\n\t\tthis.handleStateChange = this.handleStateChange.bind(this);\n\t\tthis.handleCountryChange = this.handleCountryChange.bind(this);\n\t\tthis.state = {\n\t\t\ttotalNumbers: {}, state.data.tottalNumbers\n\t\t\tcountry: \"Global\", state.location.country\n\t\t\thistoricalData: {}, state.data.historicalData\n\t\t\tcurrentState: \"\", state.location.state\n\t\t};\n\t\t*/\n\n//const totalNumbers = await totals(null);\n//const historicalData = await historical();\n//this.setState({ totalNumbers, historicalData });\n\n/*\n\t//Get country and list of states is USA\n\thandleCountryChange = async (country) => {\n\t\tif (country === \"USA\") {\n\t\t\tconst listOfStates = await states();\n\t\t\tconst showHideStates = styles.statesShow;\n\t\t\tthis.setState({ listOfStates, showHideStates, showHideCounties: styles.selectHiden });\n\t\t} else {\n\t\t\t//document.getElementById(\"state\").selectedIndex = \"0\";\n\t\t\tthis.setState({ showHideStates: styles.statesHiden, showHideCounties: styles.selectHiden });\n\t\t}\n\t\tconst singleCountryData = await totals(country);\n\t\tconst countryHistorical = await historical(country);\n\n\t\tthis.setState({ totalNumbers: singleCountryData, historicalData: countryHistorical });\n\t};\n\t*/\n\n/*\n\t\tconst {\n\t\t\ttotalNumbers,\n\t\t\tcountry,\n\t\t\thistoricalData,\n\t\t\tlistOfStates,\n\t\t\tshowHideStates,\n\t\t\tlistOfCounties,\n\t\t\tshowHideCounties,\n\t\t\tcurrentState,\n\t\t} = this.state;\n\t\t*/\n\n//Get State info and list of counties\n//handleStateChange = async (state) => {\n//\tif (state === \"\") {\n//\t\treturn this.handleCountryChange(\"USA\");\n//\t} else {\n//\t\tdocument.getElementById(\"county\").selectedIndex = \"0\";\n//\t\tconst singleStateData = await statesTotals(state);\n//\t\tconst singleStateHistorical = await historicalState(state);\n//\t\tconst listOfCounties = await counties(state);\n//\t\tthis.setState({\n//\t\t\ttotalNumbers: singleStateData,\n//\t\t\thistoricalData: singleStateHistorical,\n//\t\t\tshowHideCounties: styles.selectShow,\n//\t\t\tlistOfCounties,\n//\t\t\tcurrentState: state,\n//\t\t});\n//\t}\n//};\n\n//handleCountyChange = async (state, county) => {\n//\tif (county === \"\") {\n//\t\treturn this.handleStateChange(state);\n//\t} else {\n//\t\tconst singleCountyData = await countyTotals(state, county);\n//\t\tconst countyHistoricalData = await countyHistorical(state, county);\n//\t\tthis.setState({ totalNumbers: singleCountyData, historicalData: countyHistoricalData });\n//\t}\n//};\n\n{\n\t/*\n\t\t\t\t<CountryPicker\n\t\t\t\t\thandleCountryChange={this.handleCountryChange}\n\t\t\t\t\thandleStateChange={this.handleStateChange}\n\t\t\t\t\thandleCountyChange={this.handleCountyChange}\n\t\t\t\t\tlistOfStates={listOfStates}\n\t\t\t\t\tstatesClass={showHideStates}\n\t\t\t\t\tcountyClass={showHideCounties}\n\t\t\t\t\tlistOfCounties={listOfCounties}\n\t\t\t\t\tcurrentState={currentState}\n\t\t\t\t/>\n\t\t\t\t<Cards totalNumbers={totalNumbers} />\n\t\t\t\t<Chart country={country} historicalData={historicalData} />\n\t\t\t\t*/\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2vyxG\",\"selectBox\":\"CountryPicker_selectBox__1SZje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__yjZZH\",\"charItem\":\"Chart_charItem__3Nrzy\",\"paper\":\"Chart_paper__9qJmo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectLocation_container__3veZ0\"};"],"sourceRoot":""}